#!/bin/sh

set -euo pipefail
export HOME=/tmp
export PATH=/tmp/.local/bin:$PATH

pushd /tmp
curl -sSL https://bootstrap.pypa.io/get-pip.py -o get-pip.py 
python get-pip.py --user
pip install --user awscli
pip install -t ./python awscli

# Initialization - load function handler
source $LAMBDA_TASK_ROOT/"$(echo $_HANDLER | cut -d. -f1).sh"

# Processing
while true
do
  HEADERS="$(mktemp)"
  # Get an event
  EVENT_DATA=$(curl -sS -LD "$HEADERS" -X GET "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/next")
  REQUEST_ID=$(grep -Fi Lambda-Runtime-Aws-Request-Id "$HEADERS" | tr -d '[:space:]' | cut -d: -f2)

  # CreateAWS CLI Layer package
  date=`date +%s`
  tar -cpzf /tmp/provided${date}.tgz --numeric-owner --ignore-failed-read --warning=no-file-changed -C ./python/ . 

  echo 'Zipping done! Uploading...'

  aws s3 cp /tmp/provided${date}.tgz s3://${Bucket}/provided.tgz

  echo 'Uploading done!'

  # Execute the handler function from the script
  RESPONSE=$($(echo "$_HANDLER" | cut -d. -f2) "$EVENT_DATA")

  # Send the response
  curl -X POST "http://${AWS_LAMBDA_RUNTIME_API}/2018-06-01/runtime/invocation/$REQUEST_ID/response"  -d "$RESPONSE"
done
